--------------------------------------------------------
--  File created - Thursday-September-10-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table TO_DO_LIST
--------------------------------------------------------

  CREATE TABLE "TESTDB"."TO_DO_LIST" 
   (	"LISTID" NUMBER(*,0), 
	"USERID" NUMBER(*,0), 
	"STATUSID" NUMBER(*,0), 
	"LIST_NAME" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(20 BYTE), 
	"DUE_DATE" VARCHAR2(10 BYTE), 
	"DATE_COMPLETED" VARCHAR2(10 BYTE), 
	"PRIORITY" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table USER_CH
--------------------------------------------------------

  CREATE TABLE "TESTDB"."USER_CH" 
   (	"USERID" NUMBER(*,0), 
	"EMAIL" VARCHAR2(50 BYTE), 
	"FIRSTNAME" VARCHAR2(20 BYTE), 
	"LASTNAME" VARCHAR2(20 BYTE), 
	"BIRTHYEAR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table LIST_STATUS
--------------------------------------------------------

  CREATE TABLE "TESTDB"."LIST_STATUS" 
   (	"STATUSID" NUMBER(*,0), 
	"LISTID" NUMBER(*,0), 
	"USERID" NUMBER(*,0), 
	"STAT_MSG" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into TESTDB.TO_DO_LIST
SET DEFINE OFF;
Insert into TESTDB.TO_DO_LIST (LISTID,USERID,STATUSID,LIST_NAME,DESCRIPTION,DUE_DATE,DATE_COMPLETED,PRIORITY) values (2,13,1,'list 1','sakldjvfs','03/04/2016',null,'low');
Insert into TESTDB.TO_DO_LIST (LISTID,USERID,STATUSID,LIST_NAME,DESCRIPTION,DUE_DATE,DATE_COMPLETED,PRIORITY) values (3,13,1,'list2','ksajdkscvsoidcvn','03/04/2016',null,'high');
Insert into TESTDB.TO_DO_LIST (LISTID,USERID,STATUSID,LIST_NAME,DESCRIPTION,DUE_DATE,DATE_COMPLETED,PRIORITY) values (4,13,1,'asdf','asdfsdf','03/04/2016',null,'asd');
Insert into TESTDB.TO_DO_LIST (LISTID,USERID,STATUSID,LIST_NAME,DESCRIPTION,DUE_DATE,DATE_COMPLETED,PRIORITY) values (5,13,1,'asdf','sdf','03/04/2016',null,'sd');
Insert into TESTDB.TO_DO_LIST (LISTID,USERID,STATUSID,LIST_NAME,DESCRIPTION,DUE_DATE,DATE_COMPLETED,PRIORITY) values (6,13,1,'sdf','sdf','03/04/2016',null,'df');
Insert into TESTDB.TO_DO_LIST (LISTID,USERID,STATUSID,LIST_NAME,DESCRIPTION,DUE_DATE,DATE_COMPLETED,PRIORITY) values (7,13,1,'sdf','sdf','03/04/2016',null,'df');
Insert into TESTDB.TO_DO_LIST (LISTID,USERID,STATUSID,LIST_NAME,DESCRIPTION,DUE_DATE,DATE_COMPLETED,PRIORITY) values (8,13,1,'dfgh','dfgh','03/04/2016',null,'dfgh');
Insert into TESTDB.TO_DO_LIST (LISTID,USERID,STATUSID,LIST_NAME,DESCRIPTION,DUE_DATE,DATE_COMPLETED,PRIORITY) values (9,14,1,'dfgh','dfgh','03/04/2016',null,'dfgh');
REM INSERTING into TESTDB.USER_CH
SET DEFINE OFF;
Insert into TESTDB.USER_CH (USERID,EMAIL,FIRSTNAME,LASTNAME,BIRTHYEAR) values (11,'phone@gmail.com','fnfnfn','lnlnln',2012);
Insert into TESTDB.USER_CH (USERID,EMAIL,FIRSTNAME,LASTNAME,BIRTHYEAR) values (13,'pho@gmail.com','pho','pho',2012);
Insert into TESTDB.USER_CH (USERID,EMAIL,FIRSTNAME,LASTNAME,BIRTHYEAR) values (14,'hh@gmail.com','asjdb','salkjd',2014);
REM INSERTING into TESTDB.LIST_STATUS
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index LIST_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTDB"."LIST_PK" ON "TESTDB"."TO_DO_LIST" ("LISTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index USER_PK_CH
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTDB"."USER_PK_CH" ON "TESTDB"."USER_CH" ("USERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STATUS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTDB"."STATUS_PK" ON "TESTDB"."LIST_STATUS" ("STATUSID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table TO_DO_LIST
--------------------------------------------------------

  ALTER TABLE "TESTDB"."TO_DO_LIST" ADD CONSTRAINT "LIST_PK" PRIMARY KEY ("LISTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table USER_CH
--------------------------------------------------------

  ALTER TABLE "TESTDB"."USER_CH" ADD CONSTRAINT "USER_PK_CH" PRIMARY KEY ("USERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LIST_STATUS
--------------------------------------------------------

  ALTER TABLE "TESTDB"."LIST_STATUS" ADD CONSTRAINT "STATUS_PK" PRIMARY KEY ("STATUSID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  DDL for Trigger TO_DO_LIST_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTDB"."TO_DO_LIST_TRG" 
BEFORE INSERT ON TO_DO_LIST 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING THEN
      SELECT LIST_SEQ.NEXTVAL INTO :NEW.LISTID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTDB"."TO_DO_LIST_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger USER_CH_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTDB"."USER_CH_TRG" 
BEFORE INSERT ON USER_CH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING THEN
      SELECT USER_CH_SEQUENCE.NEXTVAL INTO :NEW.USERID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTDB"."USER_CH_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LIST_STATUS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTDB"."LIST_STATUS_TRG" 
BEFORE INSERT ON LIST_STATUS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING THEN
      SELECT STATUS_SEQ.NEXTVAL INTO :NEW.STATUSID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTDB"."LIST_STATUS_TRG" ENABLE;
